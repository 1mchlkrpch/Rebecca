/* This is auxilary
entities for generating correct tokenizer.*/
// Function to start recursive descent.
%start       = "translation_unit"
// Whitespace symbols to skip it during tokenizing.
%white_space = " \t\n"
// split symbols.
%splitters   = "+-;(){}"

// Entities of tokenizer.
%PLUS        = "+"
%SEMICOLON   = ";"
%EOF_T       = "EOF"
%G_TOKEN     = ">"
%L_TOKEN     = "<"
%EE_TOKEN     = "=="
%IF_TOKEN    = "if"
%LEFT_P      = "("
%RIGHT_P     = ")"

%LEFT_B      = "{"
%RIGHT_B     = "}"

%NUMBER_     = "[0-9]+"
%NAME_       = "[a-z]+"

identifier
	: NAME_
	| NUMBER_
	;

additive_expression
	: identifier PLUS additive_expression
	| identifier
	;

comp_expression
	: additive_expression G_TOKEN additive_expression
	| additive_expression L_TOKEN additive_expression
	| additive_expression EE_TOKEN additive_expression
	;

statement
	: comp_expression SEMICOLON statement
	| comp_expression SEMICOLON
	;

if_statement
	: IF_TOKEN LEFT_P comp_expression RIGHT_P LEFT_B statement RIGHT_B
	;

translation_unit
	: if_statement SEMICOLON translation_unit
	| if_statement SEMICOLON
	;
